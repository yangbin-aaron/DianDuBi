package cn.com.cunw.diandubiapp.base.popup;import android.content.Context;import android.graphics.Color;import android.support.annotation.ColorInt;import android.support.annotation.IntRange;import android.support.annotation.LayoutRes;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;/** * @author LiuJianjun * @time 2018-09-19 14:33 * <p> * 功能： */public abstract class BaseBuilder {    private static final int DEFAULT_DIM_ALPHA = 125;    private static final int DEFAULT_DIM_COLOR = Color.BLACK;    protected Context mContext;    protected View mContentView;    protected int mAnimationStyle = 0;    protected int mWidth = ViewGroup.LayoutParams.WRAP_CONTENT;    protected int mHeight = ViewGroup.LayoutParams.WRAP_CONTENT;    protected int mDimAlpha = DEFAULT_DIM_ALPHA;    protected int mDimColor = DEFAULT_DIM_COLOR;    protected ViewGroup mBackgroundView = null;    protected boolean mBackgroundDim = true;    protected boolean mOutsideTouchable = true;    public BaseBuilder(Context context){        this.mContext = context;    }    public BaseBuilder setContentView(View contentView){        this.mContentView = contentView;        return this;    }    public BaseBuilder setContentViewId(@LayoutRes int layoutId){        if(layoutId != 0){            this.mContentView = LayoutInflater.from(mContext).inflate(layoutId,null);        }        return this;    }    public BaseBuilder setDimAlpha(@IntRange(from = 0, to = 255) int dimAlpha){        this.mDimAlpha = dimAlpha;        return this;    }    public BaseBuilder setWidthAndHeight(int width, int height) {        if (width != 0) {            this.mWidth = width;        } else {            this.mWidth = ViewGroup.LayoutParams.WRAP_CONTENT;        }        if (height != 0) {            this.mHeight = height;        } else {            this.mHeight = ViewGroup.LayoutParams.WRAP_CONTENT;    }        return this;    }    public BaseBuilder setDimColor(@ColorInt int dimColor){        this.mDimColor = dimColor;        return this;    }    public BaseBuilder setAnimationStyle(int animationStyle) {        this.mAnimationStyle = animationStyle;        return this;    }    public BaseBuilder setBackgroundView(ViewGroup dimView){        this.mBackgroundView = dimView;        return this;    }    public BaseBuilder setBackgroundDim(boolean backgroundDim){        this.mBackgroundDim = backgroundDim;        return this;    }    public BaseBuilder setOutSideTouchable(boolean outSideTouchable){        this.mOutsideTouchable = outSideTouchable;        return this;    }    public BaseBuilder setWidth(int width){        this.mWidth = width;        return this;    }    public BaseBuilder setHeight(int height){        this.mHeight = height;        return this;    }    public abstract <T extends BasePopupWindow> T build();}